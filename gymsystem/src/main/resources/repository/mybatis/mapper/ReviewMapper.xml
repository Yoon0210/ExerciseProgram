<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="model.dao.mybatis.mapper.ReviewMapper">
	<cache />

	<sql id="BaseColumns">
		r.reviewId,
		r.userId,
		r.workoutId,
		r.title,
		r.content,
		r.score,
		r.likeCount,
		r.postedDate,
		e.exerciseName AS workoutName,
		u.userName AS trainerName
	</sql>

	<select id="selectReviewByPrimaryKey" parameterType="int" resultType="Review">
		SELECT <include refid="BaseColumns"/>
		FROM REVIEW r, EXERCISE e, USERINFO u
		WHERE r.workoutId = e.exerciseId AND e.trainerId = u.userId AND r.reviewId = #{reviewId}
	</select>
 
	<select id="selectReviewByCondition" parameterType="hashmap" resultType="Review">
		SELECT <include refid="BaseColumns"/>
		FROM REVIEW r, EXERCISE e, USERINFO u
		<where>
			r.workoutId = e.exerciseId AND e.trainerId = u.userId
			<if test="workoutType != null">
				AND e.exerciseId = #{workoutType}
			</if>
			<if test="searchContent != null">
				AND(r.title Like "%#{searchContent}%" OR r.content Like "%#{searchContent}%")  
			</if>
		</where>
		ORDER BY #{orderType}
	</select>

	<insert id="insertReview" parameterType="Review">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SELECT reviewId_seq.nextval AS id FROM DUAL
		</selectKey>
		INSERT INTO REVIEW (reviewId, userId, workoutId, title, content, score, likeCount, postedDate)
		VALUES (#{id}, #{userId}, #{workoutId}, #{title}, #{content}, #{score}, #{likeCount}, SYSDATE)
	</insert>

	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW 
		SET content = #{content}
		WHERE reviewId = #{reviewId}
	</update>
 
	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEW
		WHERE reviewId = #{reviewId}
	</delete>
	
	<delete id="deleteAllReviews">
		DELETE FROM REVIEW
	</delete>
	
</mapper>